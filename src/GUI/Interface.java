/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import Classes.AlphaBeta;
import Classes.Board;
import Classes.Computer;
import Classes.Person;
import Classes.Player;
import Classes.Scoreboard;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Eslam M.Ashour
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    
    public static char currentPlayer = 'x';
    public static String playerName1,playerName2;
    Player player;
    Player player2;
    public static boolean firstTurn=true;
    public static boolean gameOver = false;
    Icon winnerIcon = new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/winnerIcon.png"));
    Icon loseIcon = new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/failIcon.png"));
    Board gamePlay;
    ArrayList<String> scoreboard;
    public static int xPlac,yPlac;
    private static int positionX=0,positionY=0;
    public Interface() {
        initComponents();
        firstTurn=true;
        scoreboardTable.removeAll();
        menuPanel.setVisible(true);
        gameplayPanel.setVisible(false);
        howtoplayPanel.setVisible(false);
        newgamePanel.setVisible(false);
        scoreboardPanel.setVisible(false);
        xosecondButtons.setVisible(false);
        lettersecondChoice.setVisible(false);
        xofirstButtons.setVisible(false);
        letterfirstChoice.setVisible(false);
        playernameLabel1.setVisible(false);
        playernameLabel.setVisible(false);
        

        
    }
/*        player = new Person('x',0,"Eslam");
        player2 = new Person('o',0,"Ahmed");
        currentPlayer = 'x';
        oButton.setEnabled(false);*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        menuPanel = new javax.swing.JPanel();
        menuStartGamePlane = new javax.swing.JPanel();
        menuStartGameText = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        howtoplayPlane = new javax.swing.JPanel();
        howtoplayText = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        scoreboardPlane = new javax.swing.JPanel();
        scoreboardText = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        exitPlane = new javax.swing.JPanel();
        exitText = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        welcomeText1 = new javax.swing.JLabel();
        welcomeText2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        newgameBackground2 = new javax.swing.JLabel();
        gameplayPanel = new javax.swing.JPanel();
        playgroundPlane = new javax.swing.JPanel();
        placesPlane = new javax.swing.JPanel();
        placeOnePlane = new javax.swing.JPanel();
        placeOne = new javax.swing.JLabel();
        placeTwoPlane = new javax.swing.JPanel();
        placeTwo = new javax.swing.JLabel();
        placeThreePlane = new javax.swing.JPanel();
        placeThree = new javax.swing.JLabel();
        placeFourPlane = new javax.swing.JPanel();
        placeFour = new javax.swing.JLabel();
        placeFivePlane = new javax.swing.JPanel();
        placeFive = new javax.swing.JLabel();
        placeSixPlane = new javax.swing.JPanel();
        placeSix = new javax.swing.JLabel();
        placeSevenPlane = new javax.swing.JPanel();
        placeSeven = new javax.swing.JLabel();
        placeEightPlane = new javax.swing.JPanel();
        placeEight = new javax.swing.JLabel();
        placeNinePlane = new javax.swing.JPanel();
        placeNine = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        firstplayerIGText = new javax.swing.JLabel();
        firstplayerIGName = new javax.swing.JLabel();
        firstplayerIGText1 = new javax.swing.JLabel();
        secondplayerIGName = new javax.swing.JLabel();
        firstplayerMark = new javax.swing.JLabel();
        secondplayerMark = new javax.swing.JLabel();
        firstplayerIGText2 = new javax.swing.JLabel();
        firstplayerIGText3 = new javax.swing.JLabel();
        backtomenuPlane = new javax.swing.JPanel();
        backtomenuText = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        newgameBackground1 = new javax.swing.JLabel();
        howtoplayPanel = new javax.swing.JPanel();
        tipsplane = new javax.swing.JPanel();
        tip4Text = new javax.swing.JLabel();
        tip3Text = new javax.swing.JLabel();
        tip2Text = new javax.swing.JLabel();
        tip1Text = new javax.swing.JLabel();
        backtomenuPanel4 = new javax.swing.JPanel();
        backtomenuText4 = new javax.swing.JLabel();
        jSeparator20 = new javax.swing.JSeparator();
        jSeparator21 = new javax.swing.JSeparator();
        welcomeText4 = new javax.swing.JLabel();
        newgameBackground3 = new javax.swing.JLabel();
        newgamePanel = new javax.swing.JPanel();
        welcomeText = new javax.swing.JLabel();
        firstplayerPanel = new javax.swing.JPanel();
        firstplayerText = new javax.swing.JLabel();
        firstplayernameText = new javax.swing.JTextField();
        firstplayerChoice = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        playernameLabel = new javax.swing.JLabel();
        playertypeLabel = new javax.swing.JLabel();
        xofirstButtons = new javax.swing.JPanel();
        xfirstPlane = new javax.swing.JPanel();
        xfirstLabel = new javax.swing.JLabel();
        ofirstPlane = new javax.swing.JPanel();
        ofirstLabel = new javax.swing.JLabel();
        letterfirstChoice = new javax.swing.JLabel();
        computerIcon = new javax.swing.JLabel();
        secondplayerPanel = new javax.swing.JPanel();
        firstplayerText1 = new javax.swing.JLabel();
        secondplayernameText = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        playernameLabel1 = new javax.swing.JLabel();
        playertypeLabel1 = new javax.swing.JLabel();
        lettersecondChoice = new javax.swing.JLabel();
        xosecondButtons = new javax.swing.JPanel();
        xsecondPlane = new javax.swing.JPanel();
        xsecondLabel = new javax.swing.JLabel();
        osecondPlane = new javax.swing.JPanel();
        osecondLabel = new javax.swing.JLabel();
        secondplayerChoice = new javax.swing.JComboBox<>();
        computerIcon2 = new javax.swing.JLabel();
        startnewgameButton = new javax.swing.JPanel();
        startButton1 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        backtomenuPlane2 = new javax.swing.JPanel();
        backtomenuText2 = new javax.swing.JLabel();
        jSeparator16 = new javax.swing.JSeparator();
        jSeparator17 = new javax.swing.JSeparator();
        newgameBackground = new javax.swing.JLabel();
        scoreboardPanel = new javax.swing.JPanel();
        scoreboardTableAreaPanel = new javax.swing.JPanel();
        scoreboardScroll = new javax.swing.JScrollPane();
        scoreboardTable = new javax.swing.JTable();
        welcomeText3 = new javax.swing.JLabel();
        backtomenuPanel3 = new javax.swing.JPanel();
        backtomenuText3 = new javax.swing.JLabel();
        jSeparator18 = new javax.swing.JSeparator();
        jSeparator19 = new javax.swing.JSeparator();
        newgameBackground5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic-Tac-Toe");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1024, 768));
        setMaximumSize(new java.awt.Dimension(1024, 768));
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setUndecorated(true);
        setResizable(false);

        menuPanel.setMaximumSize(new java.awt.Dimension(1024, 768));
        menuPanel.setMinimumSize(new java.awt.Dimension(1024, 768));
        menuPanel.setPreferredSize(new java.awt.Dimension(1024, 768));
        menuPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                menuPanelMouseDragged(evt);
            }
        });
        menuPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuPanelMousePressed(evt);
            }
        });
        menuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuStartGamePlane.setBackground(new java.awt.Color(0,0,0,1));
        menuStartGamePlane.setOpaque(false);
        menuStartGamePlane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                menuStartGamePlaneMouseMoved(evt);
            }
        });
        menuStartGamePlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuStartGamePlaneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuStartGamePlaneMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuStartGamePlaneMousePressed(evt);
            }
        });

        menuStartGameText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        menuStartGameText.setForeground(new java.awt.Color(255, 255, 255));
        menuStartGameText.setText("Start new game");
        menuStartGameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuStartGameTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuStartGameTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuStartGameTextMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuStartGameTextMousePressed(evt);
            }
        });

        jSeparator10.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator10.setOpaque(true);

        jSeparator11.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator11.setOpaque(true);

        javax.swing.GroupLayout menuStartGamePlaneLayout = new javax.swing.GroupLayout(menuStartGamePlane);
        menuStartGamePlane.setLayout(menuStartGamePlaneLayout);
        menuStartGamePlaneLayout.setHorizontalGroup(
            menuStartGamePlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuStartGamePlaneLayout.createSequentialGroup()
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(menuStartGameText)
                .addGap(30, 30, 30)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        menuStartGamePlaneLayout.setVerticalGroup(
            menuStartGamePlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator10)
            .addComponent(jSeparator11)
            .addGroup(menuStartGamePlaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(menuStartGameText)
                .addGap(30, 30, 30))
        );

        menuPanel.add(menuStartGamePlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, -1, -1));

        howtoplayPlane.setBackground(new java.awt.Color(0,0,0,1));
        howtoplayPlane.setOpaque(false);
        howtoplayPlane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                howtoplayPlaneMouseMoved(evt);
            }
        });
        howtoplayPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                howtoplayPlaneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                howtoplayPlaneMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                howtoplayPlaneMousePressed(evt);
            }
        });

        howtoplayText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        howtoplayText.setForeground(new java.awt.Color(255, 255, 255));
        howtoplayText.setText("How to play");
        howtoplayText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                howtoplayTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                howtoplayTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                howtoplayTextMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                howtoplayTextMousePressed(evt);
            }
        });

        jSeparator12.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator12.setOpaque(true);

        jSeparator13.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator13.setOpaque(true);

        javax.swing.GroupLayout howtoplayPlaneLayout = new javax.swing.GroupLayout(howtoplayPlane);
        howtoplayPlane.setLayout(howtoplayPlaneLayout);
        howtoplayPlaneLayout.setHorizontalGroup(
            howtoplayPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howtoplayPlaneLayout.createSequentialGroup()
                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(howtoplayText)
                .addGap(30, 30, 30)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        howtoplayPlaneLayout.setVerticalGroup(
            howtoplayPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator12)
            .addComponent(jSeparator13)
            .addGroup(howtoplayPlaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(howtoplayText)
                .addGap(30, 30, 30))
        );

        menuPanel.add(howtoplayPlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        scoreboardPlane.setBackground(new java.awt.Color(0,0,0,1));
        scoreboardPlane.setOpaque(false);
        scoreboardPlane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                scoreboardPlaneMouseMoved(evt);
            }
        });
        scoreboardPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                scoreboardPlaneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                scoreboardPlaneMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                scoreboardPlaneMousePressed(evt);
            }
        });

        scoreboardText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        scoreboardText.setForeground(new java.awt.Color(255, 255, 255));
        scoreboardText.setText("Scoreboard");
        scoreboardText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scoreboardTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                scoreboardTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                scoreboardTextMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                scoreboardTextMousePressed(evt);
            }
        });

        jSeparator14.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator14.setOpaque(true);

        jSeparator15.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator15.setOpaque(true);

        javax.swing.GroupLayout scoreboardPlaneLayout = new javax.swing.GroupLayout(scoreboardPlane);
        scoreboardPlane.setLayout(scoreboardPlaneLayout);
        scoreboardPlaneLayout.setHorizontalGroup(
            scoreboardPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreboardPlaneLayout.createSequentialGroup()
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(scoreboardText)
                .addGap(30, 30, 30)
                .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        scoreboardPlaneLayout.setVerticalGroup(
            scoreboardPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator14)
            .addComponent(jSeparator15)
            .addGroup(scoreboardPlaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(scoreboardText)
                .addGap(30, 30, 30))
        );

        menuPanel.add(scoreboardPlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, -1, -1));

        exitPlane.setBackground(new java.awt.Color(0,0,0,1));
        exitPlane.setOpaque(false);
        exitPlane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                exitPlaneMouseMoved(evt);
            }
        });
        exitPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitPlaneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitPlaneMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitPlaneMousePressed(evt);
            }
        });

        exitText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        exitText.setForeground(new java.awt.Color(255, 255, 255));
        exitText.setText("Exit");
        exitText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTextMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitTextMousePressed(evt);
            }
        });

        jSeparator8.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator8.setOpaque(true);

        jSeparator9.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator9.setOpaque(true);

        javax.swing.GroupLayout exitPlaneLayout = new javax.swing.GroupLayout(exitPlane);
        exitPlane.setLayout(exitPlaneLayout);
        exitPlaneLayout.setHorizontalGroup(
            exitPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitPlaneLayout.createSequentialGroup()
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(exitText)
                .addGap(30, 30, 30)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        exitPlaneLayout.setVerticalGroup(
            exitPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator8)
            .addComponent(jSeparator9)
            .addGroup(exitPlaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(exitText)
                .addGap(30, 30, 30))
        );

        menuPanel.add(exitPlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 580, -1, -1));

        welcomeText1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        welcomeText1.setForeground(new java.awt.Color(255, 255, 255));
        welcomeText1.setText("take a chance to beat me if you can, or just run away HHH.");
        menuPanel.add(welcomeText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 670, 550, 110));

        welcomeText2.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        welcomeText2.setForeground(new java.awt.Color(255, 255, 255));
        welcomeText2.setText("Welcome to Tic Tac Toe");
        menuPanel.add(welcomeText2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 630, 110));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/failIcon.png"))); // NOI18N
        menuPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 700, -1, -1));

        newgameBackground2.setBackground(new java.awt.Color(153, 153, 255));
        newgameBackground2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/Background.jpg"))); // NOI18N
        newgameBackground2.setOpaque(true);
        menuPanel.add(newgameBackground2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        gameplayPanel.setMaximumSize(new java.awt.Dimension(1024, 768));
        gameplayPanel.setMinimumSize(new java.awt.Dimension(1024, 768));
        gameplayPanel.setPreferredSize(new java.awt.Dimension(1024, 768));
        gameplayPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                gameplayPanelMouseDragged(evt);
            }
        });
        gameplayPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gameplayPanelMousePressed(evt);
            }
        });
        gameplayPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playgroundPlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        playgroundPlane.setOpaque(false);

        placesPlane.setOpaque(false);
        placesPlane.setLayout(new java.awt.GridLayout(3, 3, 10, 10));

        placeOnePlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeOnePlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeOnePlane.setOpaque(false);
        placeOnePlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeOnePlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeOnePlaneMousePressed(evt);
            }
        });
        placeOnePlane.setLayout(new java.awt.GridBagLayout());

        placeOne.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeOne.setForeground(new java.awt.Color(255, 255, 255));
        placeOnePlane.add(placeOne, new java.awt.GridBagConstraints());

        placesPlane.add(placeOnePlane);

        placeTwoPlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeTwoPlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeTwoPlane.setOpaque(false);
        placeTwoPlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeTwoPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeTwoPlaneMousePressed(evt);
            }
        });
        placeTwoPlane.setLayout(new java.awt.GridBagLayout());

        placeTwo.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeTwo.setForeground(new java.awt.Color(255, 255, 255));
        placeTwoPlane.add(placeTwo, new java.awt.GridBagConstraints());

        placesPlane.add(placeTwoPlane);

        placeThreePlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeThreePlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeThreePlane.setOpaque(false);
        placeThreePlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeThreePlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeThreePlaneMousePressed(evt);
            }
        });
        placeThreePlane.setLayout(new java.awt.GridBagLayout());

        placeThree.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeThree.setForeground(new java.awt.Color(255, 255, 255));
        placeThreePlane.add(placeThree, new java.awt.GridBagConstraints());

        placesPlane.add(placeThreePlane);

        placeFourPlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeFourPlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeFourPlane.setOpaque(false);
        placeFourPlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeFourPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeFourPlaneMousePressed(evt);
            }
        });
        placeFourPlane.setLayout(new java.awt.GridBagLayout());

        placeFour.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeFour.setForeground(new java.awt.Color(255, 255, 255));
        placeFourPlane.add(placeFour, new java.awt.GridBagConstraints());

        placesPlane.add(placeFourPlane);

        placeFivePlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeFivePlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeFivePlane.setOpaque(false);
        placeFivePlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeFivePlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeFivePlaneMousePressed(evt);
            }
        });
        placeFivePlane.setLayout(new java.awt.GridBagLayout());

        placeFive.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeFive.setForeground(new java.awt.Color(255, 255, 255));
        placeFivePlane.add(placeFive, new java.awt.GridBagConstraints());

        placesPlane.add(placeFivePlane);

        placeSixPlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeSixPlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeSixPlane.setOpaque(false);
        placeSixPlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeSixPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeSixPlaneMousePressed(evt);
            }
        });
        placeSixPlane.setLayout(new java.awt.GridBagLayout());

        placeSix.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeSix.setForeground(new java.awt.Color(255, 255, 255));
        placeSixPlane.add(placeSix, new java.awt.GridBagConstraints());

        placesPlane.add(placeSixPlane);

        placeSevenPlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeSevenPlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeSevenPlane.setOpaque(false);
        placeSevenPlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeSevenPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeSevenPlaneMousePressed(evt);
            }
        });
        placeSevenPlane.setLayout(new java.awt.GridBagLayout());

        placeSeven.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeSeven.setForeground(new java.awt.Color(255, 255, 255));
        placeSevenPlane.add(placeSeven, new java.awt.GridBagConstraints());

        placesPlane.add(placeSevenPlane);

        placeEightPlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeEightPlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeEightPlane.setOpaque(false);
        placeEightPlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeEightPlane.setRequestFocusEnabled(false);
        placeEightPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeEightPlaneMousePressed(evt);
            }
        });
        placeEightPlane.setLayout(new java.awt.GridBagLayout());

        placeEight.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeEight.setForeground(new java.awt.Color(255, 255, 255));
        placeEight.setAlignmentY(0.0F);
        placeEightPlane.add(placeEight, new java.awt.GridBagConstraints());

        placesPlane.add(placeEightPlane);

        placeNinePlane.setBackground(new java.awt.Color(0, 0, 0, 1));
        placeNinePlane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        placeNinePlane.setOpaque(false);
        placeNinePlane.setPreferredSize(new java.awt.Dimension(80, 80));
        placeNinePlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeNinePlaneMousePressed(evt);
            }
        });
        placeNinePlane.setLayout(new java.awt.GridBagLayout());

        placeNine.setFont(new java.awt.Font("Forte", 0, 90)); // NOI18N
        placeNine.setForeground(new java.awt.Color(255, 255, 255));
        placeNinePlane.add(placeNine, new java.awt.GridBagConstraints());

        placesPlane.add(placeNinePlane);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0, 1));
        jPanel1.setOpaque(false);

        firstplayerIGText.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayerIGText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        firstplayerIGText.setForeground(new java.awt.Color(255, 255, 255));
        firstplayerIGText.setText("First player: ");

        firstplayerIGName.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayerIGName.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        firstplayerIGName.setForeground(new java.awt.Color(255, 255, 255));

        firstplayerIGText1.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayerIGText1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        firstplayerIGText1.setForeground(new java.awt.Color(255, 255, 255));
        firstplayerIGText1.setText("Second player: ");

        secondplayerIGName.setBackground(new java.awt.Color(0, 0, 0, 1));
        secondplayerIGName.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        secondplayerIGName.setForeground(new java.awt.Color(255, 255, 255));

        firstplayerMark.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayerMark.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        firstplayerMark.setForeground(new java.awt.Color(255, 255, 255));

        secondplayerMark.setBackground(new java.awt.Color(0, 0, 0, 1));
        secondplayerMark.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        secondplayerMark.setForeground(new java.awt.Color(255, 255, 255));

        firstplayerIGText2.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayerIGText2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        firstplayerIGText2.setForeground(new java.awt.Color(255, 255, 255));
        firstplayerIGText2.setText("plays with");

        firstplayerIGText3.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayerIGText3.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        firstplayerIGText3.setForeground(new java.awt.Color(255, 255, 255));
        firstplayerIGText3.setText("plays with");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(firstplayerIGText1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secondplayerIGName, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(firstplayerIGText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(firstplayerIGName, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstplayerIGText2)
                    .addComponent(firstplayerIGText3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondplayerMark, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstplayerMark, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstplayerIGName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstplayerIGText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstplayerIGText1)
                            .addComponent(secondplayerIGName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(firstplayerMark, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstplayerIGText3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(secondplayerMark, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstplayerIGText2))))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        backtomenuPlane.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPlane.setOpaque(false);
        backtomenuPlane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backtomenuPlaneMouseMoved(evt);
            }
        });
        backtomenuPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuPlaneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuPlaneMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuPlaneMousePressed(evt);
            }
        });

        backtomenuText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        backtomenuText.setForeground(new java.awt.Color(255, 255, 255));
        backtomenuText.setText("Back to menu");
        backtomenuText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backtomenuTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuTextMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuTextMousePressed(evt);
            }
        });

        jSeparator5.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator5.setOpaque(true);

        jSeparator7.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator7.setOpaque(true);

        javax.swing.GroupLayout backtomenuPlaneLayout = new javax.swing.GroupLayout(backtomenuPlane);
        backtomenuPlane.setLayout(backtomenuPlaneLayout);
        backtomenuPlaneLayout.setHorizontalGroup(
            backtomenuPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backtomenuPlaneLayout.createSequentialGroup()
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(backtomenuText)
                .addGap(30, 30, 30)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        backtomenuPlaneLayout.setVerticalGroup(
            backtomenuPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addComponent(jSeparator7)
            .addGroup(backtomenuPlaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backtomenuText)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout playgroundPlaneLayout = new javax.swing.GroupLayout(playgroundPlane);
        playgroundPlane.setLayout(playgroundPlaneLayout);
        playgroundPlaneLayout.setHorizontalGroup(
            playgroundPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(playgroundPlaneLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(placesPlane, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playgroundPlaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backtomenuPlane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        playgroundPlaneLayout.setVerticalGroup(
            playgroundPlaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playgroundPlaneLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(placesPlane, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(backtomenuPlane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gameplayPanel.add(playgroundPlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, -1));

        newgameBackground1.setBackground(new java.awt.Color(153, 153, 255));
        newgameBackground1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/Background.jpg"))); // NOI18N
        newgameBackground1.setOpaque(true);
        gameplayPanel.add(newgameBackground1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        howtoplayPanel.setMaximumSize(new java.awt.Dimension(1024, 768));
        howtoplayPanel.setMinimumSize(new java.awt.Dimension(1024, 768));
        howtoplayPanel.setPreferredSize(new java.awt.Dimension(1024, 768));
        howtoplayPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                howtoplayPanelMouseDragged(evt);
            }
        });
        howtoplayPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                howtoplayPanelMousePressed(evt);
            }
        });
        howtoplayPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tipsplane.setBackground(new java.awt.Color(0,0,0,1));
        tipsplane.setOpaque(false);
        tipsplane.setLayout(new java.awt.GridBagLayout());

        tip4Text.setFont(new java.awt.Font("Century Gothic", 0, 26)); // NOI18N
        tip4Text.setForeground(new java.awt.Color(255, 255, 255));
        tip4Text.setText("4. You can watch AI plays agains itself. ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 101;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        tipsplane.add(tip4Text, gridBagConstraints);

        tip3Text.setFont(new java.awt.Font("Century Gothic", 0, 26)); // NOI18N
        tip3Text.setForeground(new java.awt.Color(255, 255, 255));
        tip3Text.setText("2. The first player to get 3 of her/his marks in a row or a coloumn  is the winner. ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 48;
        gridBagConstraints.ipady = 10;
        tipsplane.add(tip3Text, gridBagConstraints);

        tip2Text.setFont(new java.awt.Font("Century Gothic", 0, 26)); // NOI18N
        tip2Text.setForeground(new java.awt.Color(255, 255, 255));
        tip2Text.setText("3. You are X, your friend (or the computer in this case) is O.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 74;
        gridBagConstraints.ipady = 10;
        tipsplane.add(tip2Text, gridBagConstraints);

        tip1Text.setFont(new java.awt.Font("Century Gothic", 0, 26)); // NOI18N
        tip1Text.setForeground(new java.awt.Color(255, 255, 255));
        tip1Text.setText("1. The game is played on a grid that's 3 squares by 3 squares.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipady = 10;
        tipsplane.add(tip1Text, gridBagConstraints);

        howtoplayPanel.add(tipsplane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1030, 400));

        backtomenuPanel4.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPanel4.setOpaque(false);
        backtomenuPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backtomenuPanel4MouseMoved(evt);
            }
        });
        backtomenuPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuPanel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuPanel4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuPanel4MousePressed(evt);
            }
        });

        backtomenuText4.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        backtomenuText4.setForeground(new java.awt.Color(255, 255, 255));
        backtomenuText4.setText("Back");
        backtomenuText4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backtomenuText4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuText4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuText4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuText4MousePressed(evt);
            }
        });

        jSeparator20.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator20.setOpaque(true);

        jSeparator21.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator21.setOpaque(true);

        javax.swing.GroupLayout backtomenuPanel4Layout = new javax.swing.GroupLayout(backtomenuPanel4);
        backtomenuPanel4.setLayout(backtomenuPanel4Layout);
        backtomenuPanel4Layout.setHorizontalGroup(
            backtomenuPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backtomenuPanel4Layout.createSequentialGroup()
                .addComponent(jSeparator20, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(backtomenuText4)
                .addGap(30, 30, 30)
                .addComponent(jSeparator21, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        backtomenuPanel4Layout.setVerticalGroup(
            backtomenuPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator20)
            .addComponent(jSeparator21)
            .addGroup(backtomenuPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backtomenuText4)
                .addGap(30, 30, 30))
        );

        howtoplayPanel.add(backtomenuPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 620, -1, -1));

        welcomeText4.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        welcomeText4.setForeground(new java.awt.Color(255, 255, 255));
        welcomeText4.setText("How to Play?");
        howtoplayPanel.add(welcomeText4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, -1, -1));

        newgameBackground3.setBackground(new java.awt.Color(153, 153, 255));
        newgameBackground3.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        newgameBackground3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/Background.jpg"))); // NOI18N
        newgameBackground3.setOpaque(true);
        howtoplayPanel.add(newgameBackground3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        newgamePanel.setMaximumSize(new java.awt.Dimension(1024, 768));
        newgamePanel.setMinimumSize(new java.awt.Dimension(1024, 768));
        newgamePanel.setPreferredSize(new java.awt.Dimension(1024, 768));
        newgamePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                newgamePanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                newgamePanelMouseReleased(evt);
            }
        });
        newgamePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        welcomeText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        welcomeText.setForeground(new java.awt.Color(255, 255, 255));
        welcomeText.setText("Place yourself in a battle");
        newgamePanel.add(welcomeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, -1));

        firstplayerPanel.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayerPanel.setOpaque(false);

        firstplayerText.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        firstplayerText.setForeground(new java.awt.Color(255, 255, 255));
        firstplayerText.setText("The first player");

        firstplayernameText.setEditable(false);
        firstplayernameText.setBackground(new java.awt.Color(0, 0, 0, 1));
        firstplayernameText.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        firstplayernameText.setForeground(new java.awt.Color(255, 255, 255));
        firstplayernameText.setBorder(null);
        firstplayernameText.setOpaque(false);

        firstplayerChoice.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        firstplayerChoice.setForeground(new java.awt.Color(255, 255, 255));
        firstplayerChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer", "Person" }));
        firstplayerChoice.setBorder(null);
        firstplayerChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstplayerChoiceActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator1.setOpaque(true);

        playernameLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        playernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        playernameLabel.setText("Player Name");

        playertypeLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        playertypeLabel.setForeground(new java.awt.Color(255, 255, 255));
        playertypeLabel.setText("Player type");

        xofirstButtons.setOpaque(false);
        xofirstButtons.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        xfirstPlane.setBackground(new java.awt.Color(255, 255, 255));
        xfirstPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                xfirstPlaneMousePressed(evt);
            }
        });
        xfirstPlane.setLayout(new java.awt.GridBagLayout());

        xfirstLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        xfirstLabel.setText("x");
        xfirstPlane.add(xfirstLabel, new java.awt.GridBagConstraints());

        xofirstButtons.add(xfirstPlane);

        ofirstPlane.setBackground(new java.awt.Color(255, 255, 255));
        ofirstPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ofirstPlaneMousePressed(evt);
            }
        });
        ofirstPlane.setLayout(new java.awt.GridBagLayout());

        ofirstLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        ofirstLabel.setText("O");
        ofirstPlane.add(ofirstLabel, new java.awt.GridBagConstraints());

        xofirstButtons.add(ofirstPlane);

        letterfirstChoice.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        letterfirstChoice.setForeground(new java.awt.Color(255, 255, 255));
        letterfirstChoice.setText("First player choice");

        computerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/failIcon.png"))); // NOI18N

        secondplayerPanel.setBackground(new java.awt.Color(0, 0, 0, 1));
        secondplayerPanel.setOpaque(false);

        firstplayerText1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        firstplayerText1.setForeground(new java.awt.Color(255, 255, 255));
        firstplayerText1.setText("The second player");

        secondplayernameText.setEditable(false);
        secondplayernameText.setBackground(new java.awt.Color(0, 0, 0, 1));
        secondplayernameText.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        secondplayernameText.setForeground(new java.awt.Color(255, 255, 255));
        secondplayernameText.setBorder(null);
        secondplayernameText.setOpaque(false);

        playernameLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        playernameLabel1.setForeground(new java.awt.Color(255, 255, 255));
        playernameLabel1.setText("Player Name");

        playertypeLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        playertypeLabel1.setForeground(new java.awt.Color(255, 255, 255));
        playertypeLabel1.setText("Player type");

        lettersecondChoice.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        lettersecondChoice.setForeground(new java.awt.Color(255, 255, 255));
        lettersecondChoice.setText("Second player choice");

        xosecondButtons.setOpaque(false);
        xosecondButtons.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        xsecondPlane.setBackground(new java.awt.Color(255, 255, 255));
        xsecondPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                xsecondPlaneMousePressed(evt);
            }
        });
        xsecondPlane.setLayout(new java.awt.GridBagLayout());

        xsecondLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        xsecondLabel.setText("x");
        xsecondPlane.add(xsecondLabel, new java.awt.GridBagConstraints());

        xosecondButtons.add(xsecondPlane);

        osecondPlane.setBackground(new java.awt.Color(255, 255, 255));
        osecondPlane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                osecondPlaneMousePressed(evt);
            }
        });
        osecondPlane.setLayout(new java.awt.GridBagLayout());

        osecondLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        osecondLabel.setText("O");
        osecondPlane.add(osecondLabel, new java.awt.GridBagConstraints());

        xosecondButtons.add(osecondPlane);

        secondplayerChoice.setBackground(new java.awt.Color(204, 204, 204));
        secondplayerChoice.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        secondplayerChoice.setForeground(new java.awt.Color(255, 255, 255));
        secondplayerChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer", "Person" }));
        secondplayerChoice.setBorder(null);
        secondplayerChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondplayerChoiceActionPerformed(evt);
            }
        });

        computerIcon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/failIcon.png"))); // NOI18N

        javax.swing.GroupLayout secondplayerPanelLayout = new javax.swing.GroupLayout(secondplayerPanel);
        secondplayerPanel.setLayout(secondplayerPanelLayout);
        secondplayerPanelLayout.setHorizontalGroup(
            secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondplayerPanelLayout.createSequentialGroup()
                .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(secondplayerPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(secondplayerPanelLayout.createSequentialGroup()
                                .addComponent(playernameLabel1)
                                .addGap(29, 29, 29)
                                .addComponent(secondplayernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(secondplayerPanelLayout.createSequentialGroup()
                                .addComponent(playertypeLabel1)
                                .addGap(50, 50, 50)
                                .addComponent(secondplayerChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(computerIcon2)))
                        .addGap(158, 158, 158)
                        .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lettersecondChoice)
                            .addComponent(xosecondButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(secondplayerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(firstplayerText1))
                    .addGroup(secondplayerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        secondplayerPanelLayout.setVerticalGroup(
            secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondplayerPanelLayout.createSequentialGroup()
                .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(secondplayerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(firstplayerText1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playertypeLabel1)
                            .addComponent(secondplayerChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(secondplayerPanelLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lettersecondChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(computerIcon2))))
                .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(secondplayerPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(secondplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playernameLabel1)
                            .addComponent(secondplayernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(secondplayerPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(xosecondButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout firstplayerPanelLayout = new javax.swing.GroupLayout(firstplayerPanel);
        firstplayerPanel.setLayout(firstplayerPanelLayout);
        firstplayerPanelLayout.setHorizontalGroup(
            firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, firstplayerPanelLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(firstplayerPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secondplayerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, firstplayerPanelLayout.createSequentialGroup()
                        .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, firstplayerPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstplayerText)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, firstplayerPanelLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(playertypeLabel)
                                    .addComponent(playernameLabel))
                                .addGap(49, 49, 49)
                                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(firstplayerPanelLayout.createSequentialGroup()
                                        .addComponent(firstplayerChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(computerIcon))
                                    .addComponent(firstplayernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(160, 160, 160)
                                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(xofirstButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(letterfirstChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        firstplayerPanelLayout.setVerticalGroup(
            firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(firstplayerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(firstplayerText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(firstplayerPanelLayout.createSequentialGroup()
                        .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(firstplayerPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstplayerChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(playertypeLabel)))
                            .addGroup(firstplayerPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(letterfirstChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(computerIcon))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(firstplayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(firstplayernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playernameLabel)))
                    .addGroup(firstplayerPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xofirstButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(secondplayerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        newgamePanel.add(firstplayerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1020, 450));

        startnewgameButton.setBackground(new java.awt.Color(0,0,0,1));
        startnewgameButton.setOpaque(false);
        startnewgameButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                startnewgameButtonMouseMoved(evt);
            }
        });
        startnewgameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startnewgameButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startnewgameButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startnewgameButtonMousePressed(evt);
            }
        });

        startButton1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        startButton1.setForeground(new java.awt.Color(255, 255, 255));
        startButton1.setText("Start new game");
        startButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startButton1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startButton1MousePressed(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator4.setOpaque(true);

        jSeparator6.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator6.setOpaque(true);

        javax.swing.GroupLayout startnewgameButtonLayout = new javax.swing.GroupLayout(startnewgameButton);
        startnewgameButton.setLayout(startnewgameButtonLayout);
        startnewgameButtonLayout.setHorizontalGroup(
            startnewgameButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startnewgameButtonLayout.createSequentialGroup()
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(startButton1)
                .addGap(30, 30, 30)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        startnewgameButtonLayout.setVerticalGroup(
            startnewgameButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addComponent(jSeparator6)
            .addGroup(startnewgameButtonLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(startButton1)
                .addGap(30, 30, 30))
        );

        newgamePanel.add(startnewgameButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 600, -1, -1));

        backtomenuPlane2.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPlane2.setOpaque(false);
        backtomenuPlane2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backtomenuPlane2MouseMoved(evt);
            }
        });
        backtomenuPlane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuPlane2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuPlane2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuPlane2MousePressed(evt);
            }
        });

        backtomenuText2.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        backtomenuText2.setForeground(new java.awt.Color(255, 255, 255));
        backtomenuText2.setText("Back");
        backtomenuText2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backtomenuText2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuText2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuText2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuText2MousePressed(evt);
            }
        });

        jSeparator16.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator16.setOpaque(true);

        jSeparator17.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator17.setOpaque(true);

        javax.swing.GroupLayout backtomenuPlane2Layout = new javax.swing.GroupLayout(backtomenuPlane2);
        backtomenuPlane2.setLayout(backtomenuPlane2Layout);
        backtomenuPlane2Layout.setHorizontalGroup(
            backtomenuPlane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backtomenuPlane2Layout.createSequentialGroup()
                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(backtomenuText2)
                .addGap(30, 30, 30)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        backtomenuPlane2Layout.setVerticalGroup(
            backtomenuPlane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator16)
            .addComponent(jSeparator17)
            .addGroup(backtomenuPlane2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backtomenuText2)
                .addGap(30, 30, 30))
        );

        newgamePanel.add(backtomenuPlane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 600, -1, -1));

        newgameBackground.setBackground(new java.awt.Color(153, 153, 255));
        newgameBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/Background.jpg"))); // NOI18N
        newgameBackground.setOpaque(true);
        newgamePanel.add(newgameBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        scoreboardPanel.setMaximumSize(new java.awt.Dimension(1024, 768));
        scoreboardPanel.setMinimumSize(new java.awt.Dimension(1024, 768));
        scoreboardPanel.setPreferredSize(new java.awt.Dimension(1024, 768));
        scoreboardPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scoreboardTableAreaPanel.setBackground(new java.awt.Color(0,0,0,1));
        scoreboardTableAreaPanel.setOpaque(false);
        scoreboardTableAreaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scoreboardScroll.setBorder(null);

        scoreboardTable.setBackground(new java.awt.Color(0,0,0,1));
        scoreboardTable.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        scoreboardTable.setForeground(new java.awt.Color(255, 255, 255));
        scoreboardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Score"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scoreboardTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        scoreboardTable.setGridColor(new java.awt.Color(0,0,0,1));
        scoreboardTable.setRowHeight(60);
        scoreboardTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        scoreboardTable.getTableHeader().setResizingAllowed(false);
        scoreboardTable.getTableHeader().setReorderingAllowed(false);
        scoreboardScroll.setViewportView(scoreboardTable);

        scoreboardTableAreaPanel.add(scoreboardScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 620, 410));

        scoreboardPanel.add(scoreboardTableAreaPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1020, 550));

        welcomeText3.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        welcomeText3.setForeground(new java.awt.Color(255, 255, 255));
        welcomeText3.setText("Scoreboard");
        scoreboardPanel.add(welcomeText3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, -1, -1));

        backtomenuPanel3.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPanel3.setOpaque(false);
        backtomenuPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backtomenuPanel3MouseMoved(evt);
            }
        });
        backtomenuPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuPanel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuPanel3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuPanel3MousePressed(evt);
            }
        });

        backtomenuText3.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        backtomenuText3.setForeground(new java.awt.Color(255, 255, 255));
        backtomenuText3.setText("Back");
        backtomenuText3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backtomenuText3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtomenuText3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtomenuText3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtomenuText3MousePressed(evt);
            }
        });

        jSeparator18.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator18.setOpaque(true);

        jSeparator19.setBackground(new java.awt.Color(160, 160, 160));
        jSeparator19.setOpaque(true);

        javax.swing.GroupLayout backtomenuPanel3Layout = new javax.swing.GroupLayout(backtomenuPanel3);
        backtomenuPanel3.setLayout(backtomenuPanel3Layout);
        backtomenuPanel3Layout.setHorizontalGroup(
            backtomenuPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backtomenuPanel3Layout.createSequentialGroup()
                .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(backtomenuText3)
                .addGap(30, 30, 30)
                .addComponent(jSeparator19, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        backtomenuPanel3Layout.setVerticalGroup(
            backtomenuPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator18)
            .addComponent(jSeparator19)
            .addGroup(backtomenuPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backtomenuText3)
                .addGap(30, 30, 30))
        );

        scoreboardPanel.add(backtomenuPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 620, -1, -1));

        newgameBackground5.setBackground(new java.awt.Color(153, 153, 255));
        newgameBackground5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Photos/Background.jpg"))); // NOI18N
        newgameBackground5.setOpaque(true);
        scoreboardPanel.add(newgameBackground5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameplayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(howtoplayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(newgamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scoreboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameplayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(howtoplayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(newgamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scoreboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void osecondPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_osecondPlaneMousePressed
        currentPlayer = 'o';
        osecondPlane.setBackground(Color.GREEN);
        xsecondPlane.setBackground(Color.WHITE);
        ofirstPlane.setBackground(Color.GREEN);
        xfirstPlane.setBackground(Color.WHITE);
        startnewgameButton.setVisible(true);
    }//GEN-LAST:event_osecondPlaneMousePressed

    private void xsecondPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xsecondPlaneMousePressed
        currentPlayer = 'x';
        xsecondPlane.setBackground(Color.GREEN);
        osecondPlane.setBackground(Color.WHITE);
        xfirstPlane.setBackground(Color.GREEN);
        ofirstPlane.setBackground(Color.WHITE);
        startnewgameButton.setVisible(true);
    }//GEN-LAST:event_xsecondPlaneMousePressed

    
    
    
    
    //player2 computer player1 computer
    private void startButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButton1MouseClicked
        
    }//GEN-LAST:event_startButton1MouseClicked

    private void firstplayerChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstplayerChoiceActionPerformed
        if(firstplayerChoice.getSelectedIndex()==1) 
        {
            computerIcon.setVisible(false);
            if(secondplayerChoice.getSelectedIndex()== 1)
            {
                xosecondButtons.setVisible(false);
                lettersecondChoice.setVisible(false);
            }
            firstplayernameText.setEditable(true);
            firstplayernameText.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white));
            letterfirstChoice.setVisible(true);
            letterfirstChoice.setText("First player mark");
            xofirstButtons.setVisible(true);
            startnewgameButton.setVisible(false);
            playernameLabel.setVisible(true);
        }
        else 
        {
            computerIcon.setVisible(true);
            letterfirstChoice.setVisible(false);
            xofirstButtons.setVisible(false);
            playernameLabel.setVisible(false);
            if(secondplayerChoice.getSelectedIndex()== 1) 
            {
                lettersecondChoice.setVisible(true);
                xosecondButtons.setVisible(true);
                startnewgameButton.setVisible(false);
            }
            
            firstplayernameText.setText("");
            firstplayernameText.setEditable(false);
            firstplayernameText.setBorder(null);
            if(secondplayerChoice.getSelectedIndex()== 0) 
            {
                xosecondButtons.setVisible(false);
                lettersecondChoice.setVisible(false);
                startnewgameButton.setVisible(true);
            }
        }
    }//GEN-LAST:event_firstplayerChoiceActionPerformed

    private void secondplayerChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondplayerChoiceActionPerformed
        if(secondplayerChoice.getSelectedIndex()==1) 
        {
            computerIcon2.setVisible(false);
            secondplayernameText.setEditable(true);
            playernameLabel1.setVisible(true);
            secondplayernameText.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white));
            if(firstplayerChoice.getSelectedIndex()== 0) 
            {
                lettersecondChoice.setVisible(true);
                xosecondButtons.setVisible(true);
                startnewgameButton.setVisible(false);
                
            }
        }
        else 
        {
            computerIcon2.setVisible(true);
            lettersecondChoice.setVisible(false);
            xosecondButtons.setVisible(false);
            playernameLabel1.setVisible(false);
            secondplayernameText.setText("");
            secondplayernameText.setEditable(false);
            secondplayernameText.setBorder(null);
            if(firstplayerChoice.getSelectedIndex()==0) startnewgameButton.setVisible(true);

        }
    }//GEN-LAST:event_secondplayerChoiceActionPerformed

    private void xfirstPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xfirstPlaneMousePressed
        currentPlayer = 'x';
        xfirstPlane.setBackground(Color.GREEN);
        ofirstPlane.setBackground(Color.WHITE);
                xsecondPlane.setBackground(Color.GREEN);
        osecondPlane.setBackground(Color.WHITE);
        startnewgameButton.setVisible(true);
    }//GEN-LAST:event_xfirstPlaneMousePressed

    private void ofirstPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ofirstPlaneMousePressed
        currentPlayer = 'o';
        ofirstPlane.setBackground(Color.GREEN);
        xfirstPlane.setBackground(Color.WHITE);
        osecondPlane.setBackground(Color.GREEN);
        xsecondPlane.setBackground(Color.WHITE);
        startnewgameButton.setVisible(true);
    }//GEN-LAST:event_ofirstPlaneMousePressed

    private void startnewgameButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startnewgameButtonMouseMoved
        //jPanel1.setBackground(new java.awt.Color(204,204,204));
    }//GEN-LAST:event_startnewgameButtonMouseMoved

    private void startnewgameButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startnewgameButtonMouseExited
        startnewgameButton.setBackground(new java.awt.Color(0, 0, 0, 1));
        startnewgameButton.setOpaque(false);
    }//GEN-LAST:event_startnewgameButtonMouseExited

    private void startnewgameButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startnewgameButtonMouseEntered
        startnewgameButton.setBackground(new java.awt.Color(204,204,204));
        startnewgameButton.setOpaque(true);
        
    }//GEN-LAST:event_startnewgameButtonMouseEntered

    private void startnewgameButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startnewgameButtonMousePressed
        char anotherPlayer;
        gamePlay = new Board();
        switch (currentPlayer) {
            case 'x':
                anotherPlayer = 'o';
                break;
            case 'o':
                anotherPlayer = 'x';
                break;
            default:
                JOptionPane.showMessageDialog(this, "Please take a sign!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
        }
        //player1 person player2 person
        if(firstplayerChoice.getSelectedIndex() == 1 && secondplayerChoice.getSelectedIndex() == 1) 
        {
            if(firstplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of first player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(secondplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of second player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            player = new Person(currentPlayer,firstplayernameText.getText());
            gamePlay.player = player.letter;
            player2 = new Person(anotherPlayer,secondplayernameText.getText());
        } // change score return later from constructor
        
        //player1 person player2 computer
        if(firstplayerChoice.getSelectedIndex() == 1 && secondplayerChoice.getSelectedIndex() == 0)
        {
            if(firstplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of first player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            player = new Person(currentPlayer,firstplayernameText.getText());
            gamePlay.player = player.letter;
            player2 = new Computer(anotherPlayer);
            //player2 = new Person(anotherPlayer,0,secondplayernameText.getText());
        }
        
        //player1 computer player2 computer
        if(firstplayerChoice.getSelectedIndex() == 0 && secondplayerChoice.getSelectedIndex() == 0)
        {
            player = new Computer('x');
            gamePlay.player = 'x';
            player2 = new Computer('o');
            player2.name = "Computer2";
            /*AlphaBeta AI= new AlphaBeta();
                System.out.println(AI.minimax(gamePlay,player2.letter));
                                for(int i = 0;i<9;i++)
                {
                    System.out.print(gamePlay.playGround[i]);
                }*/
        }
        
        //player2 person player1 computer
        if(firstplayerChoice.getSelectedIndex() == 0 && secondplayerChoice.getSelectedIndex() == 1)
        {
            if(secondplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of second player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            player = new Person(currentPlayer,secondplayernameText.getText());
            gamePlay.player = player.letter;
            player2 = new Computer(anotherPlayer);
        }
        firstplayerIGName.setText(player.name);
        firstplayerMark.setText(Character.toString(player.letter));
        secondplayerIGName.setText(player2.name);
        secondplayerMark.setText(Character.toString(player2.letter));
        newgamePanel.setVisible(false);
        gameplayPanel.setVisible(true); 
        if(firstplayerChoice.getSelectedIndex() == 0&& secondplayerChoice.getSelectedIndex() == 0)
        {
            boolean first = true;
            while(!gamePlay.finished)
            {
                AlphaBeta AI= new AlphaBeta();
                if(first)
                {
                    gamePlay.setPlayer(player.letter);
                    AI.minimax(gamePlay,Integer.MIN_VALUE,Integer.MAX_VALUE,gamePlay.player);
                    updateGUI(player.letter,xPlac,yPlac);
                    checkEnd();
                    first =false;
                }
                else
                {
                    gamePlay.setPlayer(player2.letter);
                    AI.minimax(gamePlay,Integer.MIN_VALUE,Integer.MAX_VALUE,gamePlay.player);
                    updateGUI(player2.letter,xPlac,yPlac);
                    checkEnd();
                    first=true;
                }

            }
        }
        
    }//GEN-LAST:event_startnewgameButtonMousePressed

    private void startButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButton1MouseEntered
        startnewgameButton.setBackground(new java.awt.Color(204,204,204));
        startnewgameButton.setOpaque(true);
    }//GEN-LAST:event_startButton1MouseEntered

    private void startButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButton1MouseExited
        startnewgameButton.setBackground(new java.awt.Color(0, 0, 0, 1));
        startnewgameButton.setOpaque(false);
    }//GEN-LAST:event_startButton1MouseExited

    private void startButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButton1MousePressed
        char anotherPlayer;
        gamePlay = new Board();
        
        switch (currentPlayer) {
            case 'x':
                anotherPlayer = 'o';
                break;
            case 'o':
                anotherPlayer = 'x';
                break;
            default:
                JOptionPane.showMessageDialog(this, "Please take a sign!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
        }
        //player1 person player2 person
        if(firstplayerChoice.getSelectedIndex() == 1 && secondplayerChoice.getSelectedIndex() == 1) 
        {
            if(firstplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of first player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(secondplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of second player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            player = new Person(currentPlayer,firstplayernameText.getText());
            gamePlay.player = player.letter;
            player2 = new Person(anotherPlayer,secondplayernameText.getText());
        } // change score return later from constructor
        
        //player1 person player2 computer
        if(firstplayerChoice.getSelectedIndex() == 1 && secondplayerChoice.getSelectedIndex() == 0)
        {
            if(firstplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of first player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            player = new Person(currentPlayer,firstplayernameText.getText());
            gamePlay.player = player.letter;
            player2 = new Computer(anotherPlayer);
            //player2 = new Person(anotherPlayer,0,secondplayernameText.getText());
        }
        
        //player1 computer player2 computer
        if(firstplayerChoice.getSelectedIndex() == 0 && secondplayerChoice.getSelectedIndex() == 0)
        {
            player = new Computer('x');
            gamePlay.player = 'x';
            player2 = new Computer('o');
            player2.name = "Computer2";
            /*AlphaBeta AI= new AlphaBeta();
                System.out.println(AI.minimax(gamePlay,player2.letter));
                                for(int i = 0;i<9;i++)
                {
                    System.out.print(gamePlay.playGround[i]);
                }*/
        }
        
        //player2 person player1 computer
        if(firstplayerChoice.getSelectedIndex() == 0 && secondplayerChoice.getSelectedIndex() == 1)
        {
            if(secondplayernameText.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please enter the name of second player!","Missing", JOptionPane.ERROR_MESSAGE);
                return;
            }
            player = new Person(currentPlayer,secondplayernameText.getText());
            gamePlay.player = player.letter;
            player2 = new Computer(anotherPlayer);
        }
        firstplayerIGName.setText(player.name);
        firstplayerMark.setText(Character.toString(player.letter));
        secondplayerIGName.setText(player2.name);
        secondplayerMark.setText(Character.toString(player2.letter));
        newgamePanel.setVisible(false);
        gameplayPanel.setVisible(true); 
        if(firstplayerChoice.getSelectedIndex() == 0&& secondplayerChoice.getSelectedIndex() == 0)
        {
            boolean first = true;
            while(!gamePlay.finished)
            {
                AlphaBeta AI= new AlphaBeta();
                if(first)
                {
                    gamePlay.setPlayer(player.letter);
                    AI.minimax(gamePlay,Integer.MIN_VALUE,Integer.MAX_VALUE,gamePlay.player);
                    updateGUI(player.letter,xPlac,yPlac);
                    checkEnd();
                    first =false;
                }
                else
                {
                    gamePlay.setPlayer(player2.letter);
                    AI.minimax(gamePlay,Integer.MIN_VALUE,Integer.MAX_VALUE,gamePlay.player);
                    updateGUI(player2.letter,xPlac,yPlac);
                    checkEnd();
                    first=true;
                }

            }
        }
        
    }//GEN-LAST:event_startButton1MousePressed

    private void placeNinePlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeNinePlaneMousePressed
        action(2,2);
    }//GEN-LAST:event_placeNinePlaneMousePressed

    private void placeEightPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeEightPlaneMousePressed
        action(2,1);
    }//GEN-LAST:event_placeEightPlaneMousePressed

    private void placeSevenPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeSevenPlaneMousePressed
        action(2,0);
    }//GEN-LAST:event_placeSevenPlaneMousePressed

    private void placeSixPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeSixPlaneMousePressed
        action(1,2);
    }//GEN-LAST:event_placeSixPlaneMousePressed

    private void placeFivePlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeFivePlaneMousePressed
        action(1,1);
    }//GEN-LAST:event_placeFivePlaneMousePressed

    private void placeFourPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeFourPlaneMousePressed
        action(1,0);
    }//GEN-LAST:event_placeFourPlaneMousePressed

    private void placeThreePlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeThreePlaneMousePressed
        action(0,2);
    }//GEN-LAST:event_placeThreePlaneMousePressed

    private void placeTwoPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeTwoPlaneMousePressed
        action(0,1);
    }//GEN-LAST:event_placeTwoPlaneMousePressed

    private void placeOnePlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOnePlaneMousePressed
        action(0,0);
    }//GEN-LAST:event_placeOnePlaneMousePressed

    private void backtomenuTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuTextMouseClicked

    private void backtomenuTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuTextMouseEntered
        backtomenuPlane.setBackground(new java.awt.Color(204,204,204));
        backtomenuPlane.setOpaque(true);
    }//GEN-LAST:event_backtomenuTextMouseEntered

    private void backtomenuTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuTextMouseExited
        backtomenuPlane.setBackground(new java.awt.Color(0, 0, 0 ,1));
        backtomenuPlane.setOpaque(false);
    }//GEN-LAST:event_backtomenuTextMouseExited

    private void backtomenuTextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuTextMousePressed
        dispose();
        new Interface().setVisible(true);
    }//GEN-LAST:event_backtomenuTextMousePressed

    private void backtomenuPlaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlaneMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuPlaneMouseMoved

    private void backtomenuPlaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlaneMouseEntered
        backtomenuPlane.setBackground(new java.awt.Color(204,204,204));
        backtomenuPlane.setOpaque(true);
    }//GEN-LAST:event_backtomenuPlaneMouseEntered

    private void backtomenuPlaneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlaneMouseExited
        backtomenuPlane.setBackground(new java.awt.Color(0, 0, 0 ,1));
        backtomenuPlane.setOpaque(false);
    }//GEN-LAST:event_backtomenuPlaneMouseExited

    private void backtomenuPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlaneMousePressed
        dispose();
        new Interface().setVisible(true);
    }//GEN-LAST:event_backtomenuPlaneMousePressed

    private void exitTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_exitTextMouseClicked

    private void exitTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTextMouseEntered
        exitPlane.setBackground(new java.awt.Color(204,204,204));
        exitPlane.setOpaque(true);
    }//GEN-LAST:event_exitTextMouseEntered

    private void exitTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTextMouseExited
        exitPlane.setBackground(new java.awt.Color(0,0,0,1));
        exitPlane.setOpaque(false);
    }//GEN-LAST:event_exitTextMouseExited

    private void exitTextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTextMousePressed
        System.exit(0);
    }//GEN-LAST:event_exitTextMousePressed

    private void exitPlaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPlaneMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_exitPlaneMouseMoved

    private void exitPlaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPlaneMouseEntered
        exitPlane.setBackground(new java.awt.Color(204,204,204));
        exitPlane.setOpaque(true);
    }//GEN-LAST:event_exitPlaneMouseEntered

    private void exitPlaneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPlaneMouseExited
        exitPlane.setBackground(new java.awt.Color(0,0,0,1));
        exitPlane.setOpaque(false);
    }//GEN-LAST:event_exitPlaneMouseExited

    private void exitPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPlaneMousePressed
        System.exit(0);
    }//GEN-LAST:event_exitPlaneMousePressed

    private void menuStartGameTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGameTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_menuStartGameTextMouseClicked

    private void menuStartGameTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGameTextMouseEntered
        menuStartGamePlane.setBackground(new java.awt.Color(204,204,204));
        menuStartGamePlane.setOpaque(true);
    }//GEN-LAST:event_menuStartGameTextMouseEntered

    private void menuStartGameTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGameTextMouseExited
        menuStartGamePlane.setBackground(new java.awt.Color(0,0,0,1));
        menuStartGamePlane.setOpaque(false);
    }//GEN-LAST:event_menuStartGameTextMouseExited

    private void menuStartGameTextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGameTextMousePressed
        menuPanel.setVisible(false);
        newgamePanel.setVisible (true);
    }//GEN-LAST:event_menuStartGameTextMousePressed

    private void menuStartGamePlaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGamePlaneMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_menuStartGamePlaneMouseMoved

    private void menuStartGamePlaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGamePlaneMouseEntered
        menuStartGamePlane.setBackground(new java.awt.Color(204,204,204));
        menuStartGamePlane.setOpaque(true);
    }//GEN-LAST:event_menuStartGamePlaneMouseEntered

    private void menuStartGamePlaneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGamePlaneMouseExited
        menuStartGamePlane.setBackground(new java.awt.Color(0,0,0,1));
        menuStartGamePlane.setOpaque(false);
    }//GEN-LAST:event_menuStartGamePlaneMouseExited

    private void menuStartGamePlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartGamePlaneMousePressed
        menuPanel.setVisible(false);
        newgamePanel.setVisible (true);
    }//GEN-LAST:event_menuStartGamePlaneMousePressed

    private void howtoplayTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_howtoplayTextMouseClicked

    private void howtoplayTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayTextMouseEntered
        howtoplayPlane.setBackground(new java.awt.Color(204,204,204));
        howtoplayPlane.setOpaque(true);
    }//GEN-LAST:event_howtoplayTextMouseEntered

    private void howtoplayTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayTextMouseExited
        howtoplayPlane.setBackground(new java.awt.Color(0,0,0,1));
        howtoplayPlane.setOpaque(false);
    }//GEN-LAST:event_howtoplayTextMouseExited

    private void howtoplayTextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayTextMousePressed
        menuPanel.setVisible(false);
        howtoplayPanel.setVisible (true);
    }//GEN-LAST:event_howtoplayTextMousePressed

    private void howtoplayPlaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayPlaneMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_howtoplayPlaneMouseMoved

    private void howtoplayPlaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayPlaneMouseEntered
         howtoplayPlane.setBackground(new java.awt.Color(204,204,204));
        howtoplayPlane.setOpaque(true);
    }//GEN-LAST:event_howtoplayPlaneMouseEntered

    private void howtoplayPlaneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayPlaneMouseExited
        howtoplayPlane.setBackground(new java.awt.Color(0,0,0,1));
        howtoplayPlane.setOpaque(false);
    }//GEN-LAST:event_howtoplayPlaneMouseExited

    private void howtoplayPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayPlaneMousePressed
        menuPanel.setVisible(false);
        howtoplayPanel.setVisible (true);
    }//GEN-LAST:event_howtoplayPlaneMousePressed

    private void scoreboardTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_scoreboardTextMouseClicked

    private void scoreboardTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardTextMouseEntered
        scoreboardPlane.setBackground(new java.awt.Color(204,204,204));
        scoreboardPlane.setOpaque(true);
    }//GEN-LAST:event_scoreboardTextMouseEntered

    private void scoreboardTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardTextMouseExited
        scoreboardPlane.setBackground(new java.awt.Color(0,0,0,1));
        scoreboardPlane.setOpaque(false);
    }//GEN-LAST:event_scoreboardTextMouseExited

    private void scoreboardTextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardTextMousePressed

        try{
           scoreboard = Scoreboard.updateTable();
        }catch(Exception e){}
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        scoreboardTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        scoreboardTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        scoreboardTable.setOpaque(false);
        ((DefaultTableCellRenderer)scoreboardTable.getDefaultRenderer(Object.class)).setOpaque(false);
        scoreboardScroll.setOpaque(false);
        scoreboardScroll.getViewport().setOpaque(false);
        scoreboardTable.setShowGrid(false);
        JTableHeader header = scoreboardTable.getTableHeader();
        header.setFont(new Font("Century Gothic", Font.PLAIN, 24));
        ((DefaultTableCellRenderer)scoreboardTable.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);
        for(int i=0;i<scoreboard.size();i++)
        {
            AddRowToJTable(new Object[]{
                                                  Scoreboard.getName(scoreboard.get(i)),
                                                  Scoreboard.getScore(scoreboard.get(i)),
                                           });
        }
        menuPanel.setVisible(false);
        scoreboardPanel.setVisible(true);
    }//GEN-LAST:event_scoreboardTextMousePressed

    private void scoreboardPlaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardPlaneMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_scoreboardPlaneMouseMoved

    private void scoreboardPlaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardPlaneMouseEntered
        scoreboardPlane.setBackground(new java.awt.Color(204,204,204));
        scoreboardPlane.setOpaque(true);
    }//GEN-LAST:event_scoreboardPlaneMouseEntered

    private void scoreboardPlaneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardPlaneMouseExited
        scoreboardPlane.setBackground(new java.awt.Color(0,0,0,1));
        scoreboardPlane.setOpaque(false);
    }//GEN-LAST:event_scoreboardPlaneMouseExited

    private void scoreboardPlaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreboardPlaneMousePressed
        
        try{

           scoreboard = Scoreboard.updateTable();
        }catch(Exception e){}
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        scoreboardTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        scoreboardTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        scoreboardTable.setOpaque(false);
        ((DefaultTableCellRenderer)scoreboardTable.getDefaultRenderer(Object.class)).setOpaque(false);
        scoreboardScroll.setOpaque(false);
        scoreboardScroll.getViewport().setOpaque(false);
        scoreboardTable.setShowGrid(false);
        JTableHeader header = scoreboardTable.getTableHeader();
        header.setFont(new Font("Century Gothic", Font.PLAIN, 24));
        ((DefaultTableCellRenderer)scoreboardTable.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);

        for(int i=0;i<scoreboard.size();i++)
        {
            AddRowToJTable(new Object[]{
                                                  Scoreboard.getName(scoreboard.get(i)),
                                                  Scoreboard.getScore(scoreboard.get(i)),
                                           });
        }
                menuPanel.setVisible(false);
        scoreboardPanel.setVisible(true);
    }//GEN-LAST:event_scoreboardPlaneMousePressed
    public void AddRowToJTable(Object[] dataRow)
    {
        DefaultTableModel model = (DefaultTableModel)scoreboardTable.getModel();
        model.addRow(dataRow);
    }
    private void backtomenuText2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuText2MouseClicked

    private void backtomenuText2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText2MouseEntered
        backtomenuPlane2.setBackground(new java.awt.Color(204,204,204));
        backtomenuPlane2.setOpaque(true);
    }//GEN-LAST:event_backtomenuText2MouseEntered

    private void backtomenuText2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText2MouseExited
        backtomenuPlane2.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPlane2.setOpaque(false);
    }//GEN-LAST:event_backtomenuText2MouseExited

    private void backtomenuText2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText2MousePressed
        newgamePanel.setVisible(false);
        menuPanel.setVisible(true);
    }//GEN-LAST:event_backtomenuText2MousePressed

    private void backtomenuPlane2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlane2MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuPlane2MouseMoved

    private void backtomenuPlane2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlane2MouseEntered
        backtomenuPlane2.setBackground(new java.awt.Color(204,204,204));
        backtomenuPlane2.setOpaque(true);
    }//GEN-LAST:event_backtomenuPlane2MouseEntered

    private void backtomenuPlane2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlane2MouseExited
        backtomenuPlane2.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPlane2.setOpaque(false);
    }//GEN-LAST:event_backtomenuPlane2MouseExited

    private void backtomenuPlane2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPlane2MousePressed
        newgamePanel.setVisible(false);
        menuPanel.setVisible(true);
    }//GEN-LAST:event_backtomenuPlane2MousePressed

    private void menuPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuPanelMousePressed
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_menuPanelMousePressed

    private void menuPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuPanelMouseDragged
        setLocation(evt.getXOnScreen()-positionX,evt.getYOnScreen()-positionY);
    }//GEN-LAST:event_menuPanelMouseDragged

    private void gameplayPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gameplayPanelMousePressed
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_gameplayPanelMousePressed

    private void gameplayPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gameplayPanelMouseDragged
        setLocation(evt.getXOnScreen()-positionX,evt.getYOnScreen()-positionY);
    }//GEN-LAST:event_gameplayPanelMouseDragged

    private void howtoplayPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayPanelMousePressed
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_howtoplayPanelMousePressed

    private void howtoplayPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howtoplayPanelMouseDragged
       setLocation(evt.getXOnScreen()-positionX,evt.getYOnScreen()-positionY);
    }//GEN-LAST:event_howtoplayPanelMouseDragged

    private void newgamePanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newgamePanelMousePressed
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_newgamePanelMousePressed

    private void newgamePanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newgamePanelMouseReleased
       setLocation(evt.getXOnScreen()-positionX,evt.getYOnScreen()-positionY);
    }//GEN-LAST:event_newgamePanelMouseReleased

    private void backtomenuText3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuText3MouseClicked

    private void backtomenuText3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText3MouseEntered
        backtomenuPanel3.setBackground(new java.awt.Color(204,204,204));
        backtomenuPanel3.setOpaque(true);
    }//GEN-LAST:event_backtomenuText3MouseEntered

    private void backtomenuText3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText3MouseExited
        backtomenuPanel3.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPanel3.setOpaque(false);
    }//GEN-LAST:event_backtomenuText3MouseExited

    private void backtomenuText3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText3MousePressed
        dispose();
        new Interface().setVisible(true);
    }//GEN-LAST:event_backtomenuText3MousePressed

    private void backtomenuPanel3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel3MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuPanel3MouseMoved

    private void backtomenuPanel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel3MouseEntered
        backtomenuPanel3.setBackground(new java.awt.Color(204,204,204));
        backtomenuPanel3.setOpaque(true);
    }//GEN-LAST:event_backtomenuPanel3MouseEntered

    private void backtomenuPanel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel3MouseExited
        backtomenuPanel3.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPanel3.setOpaque(false);
    }//GEN-LAST:event_backtomenuPanel3MouseExited

    private void backtomenuPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel3MousePressed
        dispose();
        new Interface().setVisible(true);
    }//GEN-LAST:event_backtomenuPanel3MousePressed

    private void backtomenuText4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuText4MouseClicked

    private void backtomenuText4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText4MouseEntered
        backtomenuPanel4.setBackground(new java.awt.Color(204,204,204));
        backtomenuPanel4.setOpaque(true);
    }//GEN-LAST:event_backtomenuText4MouseEntered

    private void backtomenuText4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText4MouseExited
        backtomenuPanel4.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPanel4.setOpaque(false);
    }//GEN-LAST:event_backtomenuText4MouseExited

    private void backtomenuText4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuText4MousePressed
        howtoplayPanel.setVisible(false);
        menuPanel.setVisible(true);
    }//GEN-LAST:event_backtomenuText4MousePressed

    private void backtomenuPanel4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel4MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_backtomenuPanel4MouseMoved

    private void backtomenuPanel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel4MouseEntered
        backtomenuPanel4.setBackground(new java.awt.Color(204,204,204));
        backtomenuPanel4.setOpaque(true);
    }//GEN-LAST:event_backtomenuPanel4MouseEntered

    private void backtomenuPanel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel4MouseExited
        backtomenuPanel4.setBackground(new java.awt.Color(0,0,0,1));
        backtomenuPanel4.setOpaque(false);
    }//GEN-LAST:event_backtomenuPanel4MouseExited

    private void backtomenuPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtomenuPanel4MousePressed
        howtoplayPanel.setVisible(false);
        menuPanel.setVisible(true);
    }//GEN-LAST:event_backtomenuPanel4MousePressed
    public void updateGUI(char letter,int row, int coloumn)
    {
        if(row ==0 && coloumn==0)
        {
            placeOne.setText(Character.toString(letter));
            placeOnePlane.setEnabled(false);
        }
        else if(row ==0&&coloumn==1)
        {
            placeTwo.setText(Character.toString(letter));
            placeTwoPlane.setEnabled(false);
        }
        else if(row ==0&&coloumn==2)
        {
            placeThree.setText(Character.toString(letter));
            placeThreePlane.setEnabled(false);
        }        
        else if(row ==1&&coloumn==0)
        {
            placeFour.setText(Character.toString(letter));
            placeFourPlane.setEnabled(false);
        }
        else if(row ==1&&coloumn==1)
        {
            placeFive.setText(Character.toString(letter));
            placeFivePlane.setEnabled(false);
        }
        else if(row ==1&&coloumn==2)
        {
            placeSix.setText(Character.toString(letter));
            placeSixPlane.setEnabled(false);
        }
        else if(row ==2&&coloumn==0)
        {
            placeSeven.setText(Character.toString(letter));
            placeSevenPlane.setEnabled(false);
        }
        else if(row ==2&&coloumn==1)
        {
            placeEight.setText(Character.toString(letter));
            placeEightPlane.setEnabled(false);
        }
        else if(row ==2&&coloumn==2)
        {
            placeNine.setText(Character.toString(letter));
            placeNinePlane.setEnabled(false);
        }       
    }
    public void action(int row, int coloumn)
    { 
        if(gamePlay.legalPlay(row,coloumn)&&!gamePlay.finished)
        {
            //       Person vs Person
            if(firstplayerChoice.getSelectedIndex()==1 &&secondplayerChoice.getSelectedIndex()==1)
            {
                if(firstTurn)
                {
                    gamePlay.assignPlay(player.letter,row,coloumn);
                    updateGUI(player.letter,row,coloumn);
                    checkEnd();
                    firstTurn=false;
                }
                else
                {
                    gamePlay.assignPlay(player2.letter,row,coloumn);
                    updateGUI(player2.letter,row,coloumn);
                    checkEnd();
                    firstTurn=true;
                }
                return;
            }
            //Person vs Computer
            gamePlay.setPlayer(player.letter);
            updateGUI(player.letter,row,coloumn);
            gamePlay.move(row,coloumn);
            checkEnd();


            
            if(player2.name.equals("Computer"))
            {
                AlphaBeta AI= new AlphaBeta();
                gamePlay.setPlayer(player2.letter);
                
                AI.minimax(gamePlay,Integer.MIN_VALUE,Integer.MAX_VALUE,gamePlay.player);
                updateGUI(player2.letter,xPlac,yPlac);
                checkEnd();
                
                //gamePlay.printBoard();
            }
        }   
    }
       
    public void checkEnd()
    {
                
                if(gamePlay.checkWin(player.letter) && (!player.name.equals("Computer")&&!player2.name.equals("Computer2")))  
                {
                    if(player.name.equals("Computer")||player.name.equals("Computer2"))
                    {
                        JOptionPane.showMessageDialog(this, player.name+" has won","AI replaces humanity", JOptionPane.INFORMATION_MESSAGE, loseIcon);
                        
                        return;
                    }
                    JOptionPane.showMessageDialog(this, player.name+" has won","Winner Winner", JOptionPane.INFORMATION_MESSAGE, winnerIcon);
                    gamePlay.finished = true;
                    try{Scoreboard.updateScore(player.name,Scoreboard.getPlayerScore(player.name)+2);
                            /*System.out.println(Scoreboard.getPlayerScore(player.name));*/}
                    catch(Exception e){}
                    return;
                }
                else if(gamePlay.checkWin(player2.letter) && (!player.name.equals("Computer")&&!player2.name.equals("Computer2")))
                {
                    if(player2.name.equals("Computer")||player2.name.equals("Computer2"))
                    {
                        JOptionPane.showMessageDialog(this, player2.name+" has won","AI replaces humanity", JOptionPane.INFORMATION_MESSAGE, loseIcon);
                        return;
                    }
                    JOptionPane.showMessageDialog(this, player2.name+" has won","Winner Winner", JOptionPane.INFORMATION_MESSAGE, winnerIcon);
                    gamePlay.finished=true;
                    try{Scoreboard.updateScore(player2.name,Scoreboard.getPlayerScore(player2.name)+2);}
                    //System.out.println(Scoreboard.getPlayerScore(player2.name));}
                    catch(Exception e){}
                    return;
                }
                     
            if(gamePlay.isDraw())
            {
                gamePlay.finished = true;
                if(firstplayerChoice.getSelectedIndex()==1 &&secondplayerChoice.getSelectedIndex()==1)
                                        JOptionPane.showMessageDialog(this, "No one won","Draw!",JOptionPane.INFORMATION_MESSAGE,loseIcon);
                
                if(firstplayerChoice.getSelectedIndex()==0 &&secondplayerChoice.getSelectedIndex()==0)
                    JOptionPane.showMessageDialog(this, "I am the greatest, no one can defeat me...","Hmmm!",JOptionPane.INFORMATION_MESSAGE,loseIcon);
                if((firstplayerChoice.getSelectedIndex()==0 &&secondplayerChoice.getSelectedIndex()==1)||firstplayerChoice.getSelectedIndex()==1 &&secondplayerChoice.getSelectedIndex()==0)
                JOptionPane.showMessageDialog(this, "I was almost ahead, i need to revise my algorithm.","Draw!",JOptionPane.INFORMATION_MESSAGE,loseIcon);
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backtomenuPanel3;
    private javax.swing.JPanel backtomenuPanel4;
    private javax.swing.JPanel backtomenuPlane;
    private javax.swing.JPanel backtomenuPlane2;
    private javax.swing.JLabel backtomenuText;
    private javax.swing.JLabel backtomenuText2;
    private javax.swing.JLabel backtomenuText3;
    private javax.swing.JLabel backtomenuText4;
    private javax.swing.JLabel computerIcon;
    private javax.swing.JLabel computerIcon2;
    private javax.swing.JPanel exitPlane;
    private javax.swing.JLabel exitText;
    private javax.swing.JComboBox<String> firstplayerChoice;
    private javax.swing.JLabel firstplayerIGName;
    private javax.swing.JLabel firstplayerIGText;
    private javax.swing.JLabel firstplayerIGText1;
    private javax.swing.JLabel firstplayerIGText2;
    private javax.swing.JLabel firstplayerIGText3;
    private javax.swing.JLabel firstplayerMark;
    private javax.swing.JPanel firstplayerPanel;
    private javax.swing.JLabel firstplayerText;
    private javax.swing.JLabel firstplayerText1;
    private javax.swing.JTextField firstplayernameText;
    private javax.swing.JPanel gameplayPanel;
    private javax.swing.JPanel howtoplayPanel;
    private javax.swing.JPanel howtoplayPlane;
    private javax.swing.JLabel howtoplayText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel letterfirstChoice;
    private javax.swing.JLabel lettersecondChoice;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel menuStartGamePlane;
    private javax.swing.JLabel menuStartGameText;
    private javax.swing.JLabel newgameBackground;
    private javax.swing.JLabel newgameBackground1;
    private javax.swing.JLabel newgameBackground2;
    private javax.swing.JLabel newgameBackground3;
    private javax.swing.JLabel newgameBackground5;
    private javax.swing.JPanel newgamePanel;
    private javax.swing.JLabel ofirstLabel;
    private javax.swing.JPanel ofirstPlane;
    private javax.swing.JLabel osecondLabel;
    private javax.swing.JPanel osecondPlane;
    private javax.swing.JLabel placeEight;
    private javax.swing.JPanel placeEightPlane;
    private javax.swing.JLabel placeFive;
    private javax.swing.JPanel placeFivePlane;
    private javax.swing.JLabel placeFour;
    private javax.swing.JPanel placeFourPlane;
    private javax.swing.JLabel placeNine;
    private javax.swing.JPanel placeNinePlane;
    private javax.swing.JLabel placeOne;
    private javax.swing.JPanel placeOnePlane;
    private javax.swing.JLabel placeSeven;
    private javax.swing.JPanel placeSevenPlane;
    private javax.swing.JLabel placeSix;
    private javax.swing.JPanel placeSixPlane;
    private javax.swing.JLabel placeThree;
    private javax.swing.JPanel placeThreePlane;
    private javax.swing.JLabel placeTwo;
    private javax.swing.JPanel placeTwoPlane;
    private javax.swing.JPanel placesPlane;
    private javax.swing.JLabel playernameLabel;
    private javax.swing.JLabel playernameLabel1;
    private javax.swing.JLabel playertypeLabel;
    private javax.swing.JLabel playertypeLabel1;
    private javax.swing.JPanel playgroundPlane;
    private javax.swing.JPanel scoreboardPanel;
    private javax.swing.JPanel scoreboardPlane;
    private javax.swing.JScrollPane scoreboardScroll;
    private javax.swing.JTable scoreboardTable;
    private javax.swing.JPanel scoreboardTableAreaPanel;
    private javax.swing.JLabel scoreboardText;
    private javax.swing.JComboBox<String> secondplayerChoice;
    private javax.swing.JLabel secondplayerIGName;
    private javax.swing.JLabel secondplayerMark;
    private javax.swing.JPanel secondplayerPanel;
    private javax.swing.JTextField secondplayernameText;
    private javax.swing.JLabel startButton1;
    private javax.swing.JPanel startnewgameButton;
    private javax.swing.JLabel tip1Text;
    private javax.swing.JLabel tip2Text;
    private javax.swing.JLabel tip3Text;
    private javax.swing.JLabel tip4Text;
    private javax.swing.JPanel tipsplane;
    private javax.swing.JLabel welcomeText;
    private javax.swing.JLabel welcomeText1;
    private javax.swing.JLabel welcomeText2;
    private javax.swing.JLabel welcomeText3;
    private javax.swing.JLabel welcomeText4;
    private javax.swing.JLabel xfirstLabel;
    private javax.swing.JPanel xfirstPlane;
    private javax.swing.JPanel xofirstButtons;
    private javax.swing.JPanel xosecondButtons;
    private javax.swing.JLabel xsecondLabel;
    private javax.swing.JPanel xsecondPlane;
    // End of variables declaration//GEN-END:variables
}
